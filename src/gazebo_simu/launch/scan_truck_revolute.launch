<?xml version="1.0"?>
<launch>
  <!-- these are the arguments you can pass this launch file, for example paused:=true -->
  <arg name="paused" default="false"/>
  <arg name="use_sim_time" default="true"/>
  <arg name="gui" default="true"/>
  <arg name="headless" default="false"/>
  <arg name="debug" default="false"/>
  <arg name="rviz" default="false"/>
  <arg name="scandata" default="true"/>
  <arg name="multi" default="true"/>

  <!-- start with a empty world -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch"> 
    <arg name="world_name" value="$(find gazebo_ros)/worlds/empty.world"/>
    <arg name="debug" value="$(arg debug)" />
    <arg name="gui" value="$(arg gui)" />
    <arg name="paused" value="$(arg paused)"/>
    <arg name="use_sim_time" value="$(arg use_sim_time)"/>
    <arg name="headless" value="$(arg headless)"/>
  </include>


  <!-- spawn a lds models -->
  <arg name="lds_model_revolute" default="$(find gazebo_simu)/urdf/lds_revolute.urdf.xacro"/>
  <param name="robot_description" command="$(find xacro)/xacro.py -i $(arg lds_model_revolute)" />
  <node name="lds" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen"
      args="-urdf -model lds -param robot_description -x 0 -y 0 -z 5 -R 0 -P 1.570796 -Y 0"/> 
  
  <!-- Load joint controller configurations from YAML file to parameter server -->
  <rosparam file="$(find gazebo_simu)/config/sick_revolute_control.yaml" command="load"/>

  <!-- load the controllers -->
  <node name="controller_spawner" pkg="controller_manager" type="spawner" respawn="false"
    output="screen" ns="/lds_revolute" args="lds_revolute_velocity_controller joint_state_controller"/>

 

  <!-- start get_scan_data node -->
  <!-- <group if="$(arg scandata)">
    <node name="getscandata" pkg="get_scan_data" type="get_lds_data_revolute" if="$(arg multi)"/>
    <node name="getscandata" pkg="get_scan_data" type="get_lds_data_revolute_multi" unless="$(arg multi)"/>
  </group> -->

</launch>
